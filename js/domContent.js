const urlPoster500 = 'https://image.tmdb.org/t/p/w500';
const urlPosterOriginal = 'https://image.tmdb.org/t/p/original';
const filterContainer = document.getElementById('filter');
const movieList = document.getElementById('movies');
const textInfo = document.getElementById('infoText');
const controlPanel = document.getElementById('checkTopWeekDay');

function changeTopContent() {
  const valueTopShow = JSON.parse(localStorage.getItem('topWatch')) || "day";
  return `<div class="col-12 row justify-content-center">
    <h4 class="text-center text-info col-12">–ü–æ–ø—É–ª—è—Ä–Ω–æ–µ –∑–∞:</h4> 
    <h4 class="text-right text-info col-5 h4__text-correct">–¥–µ–Ω—å</h4> 
    <div class="col-auto">
      <div class="container-toggle">
        <input type="checkbox" class="toggle__check" id="checkboxTopChange" ${valueTopShow === "week" ? 'checked' : ''}>
        <div class="toggle__switch"></div>
        <div class="toggle__track"></div>
      </div>
    </div>
    <h4 class="text-left text-info col-5 h4__text-correct">–Ω–µ–¥–µ–ª—é</h4> 
  </div>`;
}

function videoPoster(item, type) {
  const poster = item.poster_path || item.profile_path ? urlPoster500 + (item.poster_path || item.profile_path) : './img/noposter.png';
  const name = item.name || item.title
  return `
  <div class='col-12 col-md-6 col-xl-3 movie'>
    <a href="#${item.media_type}?${String(item.id).trim()}">
      <img src="${poster}" class="movies__poster-min" alt="${name}">
    </a>
    ${showVote(item, type)}
      <h5 class="border movies__title-name col">${name}</h5>
  </div>
  `;
}

/** –î–æ–±–∞–≤–∏—Ç—å –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ –∏ –≤—ã–≤–µ—Å—Ç–∏ —Å–∞–º—É –æ—à–∏–±–∫—É –≤ –∫–æ–Ω—Å–æ–ª—å */
function errorContent(reason, danger, show, text) {
  if (!show) {
    movieList.textContent = '';
    controlPanel.textContent = ''
  };
  textInfo.classList.add(danger ? 'text-danger' : 'text-info');
  textInfo.textContent = text;
  if (reason) console.error(reason);
}

/** –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ñ–∏–ª—å–º–µ */
function fullMovieContent(output) {
  filterContainer.classList.add("d-none");
  textInfo.textContent = "";
  const poster = output.poster_path ? urlPoster500 + output.poster_path : './img/noPoster.png';
  return `
  <div class="row col-12" id="bgImage">
    <div class="row col-12 container" id="bgGrad">
      <img class="movies__poster-full col-2" src="${poster}" alt="${output.title}">
      <div class="col-8 text-light">
        <h4 class="col-12 text-center text-light">${output.title} ${output.title !== output.original_title
      ? `(${output.original_title} <sup>${output.original_language}</sup>)` : ''}</h4>
        <h5 class="col-12 text-center text-secondary">${output.tagline}</h5>
        <p>–†–µ–π—Ç–∏–Ω–≥: ${output.vote_average}‚≠ê(${output.vote_count}üìù)</p>
        <p>${showGenres(output.genres)}</p>
        <p>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: ${runtime(output.runtime)}</p>
        <p>–û–ø–∏—Å–∞–Ω–∏–µ: ${output.overview ? output.overview : '–£ –¥–∞–Ω–Ω–æ–≥–æ —Ñ–∏–ª—å–º–∞ –Ω–µ—Ç –æ–ø–∏—Å–∞–Ω–∏—è'}</p>
        <p>–ü—Ä–µ–º—å–µ—Ä–∞ —Ñ–∏–ª—å–º–∞: ${dateRelease(output.release_date)} –≥–æ–¥–∞</p>
        <p>–°—Ç–∞—Ç—É—Å: ${showRelease(output.status)}</p>
        <p>${output.budget ? `–ë—é–¥–∂–µ—Ç: ${spacerBudget(output.budget)}$` : ""}</p>
        <p>${output.revenue ? `C–±–æ—Ä—ã: ${spacerBudget(output.revenue)}$` : ""}</p>
        <br>
      </div>
    </div>
  </div>
  <div class = "col-2">
      ${(output.homepage) ? `<p class="text-center"> <a href="${output.homepage}" target="_blank"> –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ </a></p>` : ''}
      ${(output.imdb_id) ? `<p class="text-center"> <a href="https://imdb.com/title/${output.imdb_id}" target="_blank"> –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ IMDB.com </a></p>` : ''}
  </div>
  <div class ="youtube col-8"></div>
`;
}

/** –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Å–µ—Ä–∏–∞–ª–µ */
function fullTvContent(output) {
  filterContainer.classList.add("d-none");
  textInfo.textContent = "";
  const poster = output.poster_path ? urlPoster500 + output.poster_path : './img/noPoster.png';
  if (output.in_production) errorContent('', true, true, '–°–µ–∑–æ–Ω –∏–ª–∏ —Å–µ—Ä–∏–∞–ª –µ—â–µ –Ω–µ –ø–æ–ª–Ω–æ—Å—Ç—å—é –≤—ã—à–µ–ª!')
  return `
  <div class="row col-12" id="bgImage">
    <div class="row col-12 container" id="bgGrad">
      <img class="movies__poster-full col-2" src="${poster}" alt="${output.name || output.title}">
      <div class="col-8 text-light">
        <h4 class="col-12 text-center text-light">${output.name} ${(output.name) !== (output.original_name)
      ? `(${output.original_name}  <sup>${output.original_language}</sup>)` : ''}</h4>
        <h5 class="col-12 text-center text-secondary">${output.tagline}</h5>
        <p>–†–µ–π—Ç–∏–Ω–≥: ${output.vote_average}‚≠ê(${output.vote_count}üìù)</p>
        <p>${showGenres(output.genres)}</p>
        <p>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å —ç–ø–∏–∑–æ–¥–∞: ${runtime(output.episode_run_time[0])}</p>
        <p>–û–ø–∏—Å–∞–Ω–∏–µ: ${output.overview}</p>
        <p>–ü—Ä–µ–º—å–µ—Ä–∞ —Å–µ—Ä–∏–∞–ª–∞: ${dateRelease(output.first_air_date || output.release_date)}</p>
        <p>${(output.last_episode_to_air) ? `${output.number_of_seasons} —Å–µ–∑–æ–Ω–æ–≤ ${output.last_episode_to_air.episode_number} —Å–µ—Ä–∏–π –≤—ã—à–ª–æ, 
          –ø–æ—Å–ª–µ–¥–Ω–∏–π: ${dateRelease(output.last_air_date)} ${output.next_episode_to_air ? `, —Å–ª–µ–¥—É—é—â–∞—è —Å–µ—Ä–∏—è: ${dateRelease(output.next_episode_to_air.air_date)}` : ""}` : ""}</p>
        <p>–°—Ç–∞—Ç—É—Å: ${showRelease(output.status)}</p>
        <br>
        </div>
      </div>
    </div>
    <div class = "col-2">
      ${(output.homepage) ? `<p class="text-center"> <a href="${output.homepage}" target="_blank"> –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ </a></p>` : ''}
      ${(output.imdb_id) ? `<p class="text-center"> <a href="https://imdb.com/title/${output.imdb_id}" target="_blank"> –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ IMDB.com </a></p>` : ''}
    </div>
    <div class ="youtube col-8"></div>
`;
}

/** –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ–± –∞–∫—Ç–µ—Ä–µ */
function fullPersonContent(output) {
  filterContainer.classList.add("d-none");
  textInfo.textContent = "";
  const poster = output.profile_path ? urlPoster500 + output.profile_path : './img/noPoster.png';
  return `
    <div class="row col-12" id="bgImage">
      <div class="row col-12 container" id="bgGrad">
        <img class="movies__poster-full col-2" src="${poster}" alt="${output.name}">
        <div class="col-8 text-light">
          <h4 class="col-12 text-center text-light">${output.name}</h4>
          <h5 class="col-12 text-center text-secondary">${output.also_known_as[0]}</h5>
          <p>–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è: ${dateRelease(output.birthday)} ${output.deathday ? `, –¥–∞—Ç–∞ —Å–º–µ—Ä—Ç–∏: ${dateRelease(output.deathday)}` :""}</p>
          <p>–ú–µ—Å—Ç–æ —Ä–æ–∂–¥–µ–Ω–∏—è: ${output.place_of_birth}</p>
          <p>–ü–æ–ª: ${changeGender(output.gender)}</p>
          <p>–ë–∏–æ–≥—Ä–∞—Ñ–∏—è: ${output.biography}</p>
          <br>
        </div>
      </div>
    </div>
    <div class = "col-2">
    ${(output.homepage) ? `<p class="text-center"> <a href="${output.homepage}" target="_blank"> –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—á–∫–∞ </a></p>` : ''}
    ${(output.imdb_id) ? `<p class="text-center"> <a href="https://imdb.com/name/${output.imdb_id}" target="_blank"> –°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–∞ IMDB.com </a></p>` : ''}
    </div>
    <div class ="youtube col-8"></div>
  `;
}

/** –í—ã–≤–æ–¥ —Ñ–æ–Ω–æ–≤–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è */
function backgroundImage(image) {
  const poster = image ? urlPosterOriginal + image : './img/black.png';
  const bgImage = document.getElementById("bgImage");
  const bgGrad = document.getElementById("bgGrad");

  bgImage.style.backgroundImage = `url(${poster})`;
  bgImage.classList.add('movies__bg-image');
  bgGrad.classList.add('movies__bg-gradient');
}

function changeGender(gender) {
  if (gender === 1) {
    return "–ñ–µ–Ω—â–∏–Ω–∞";
  } else if (gender === 2) {
    return "–ú—É–∂—á–∏–Ω–∞";
  } else {
    return "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ";
  }
}

/** –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–π—Ç–∏–Ω–≥–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –Ω–∞ —Ç–∏–ø —Ñ–∏–ª—å–º/—Å–µ—Ä–∏–∞–ª */
function showVote(item, type) {
  if (item.media_type === 'person' || type === 'person') return ""

  return `<div class="movie__vote">
    <p class="text-light vote__text">${item.vote_average}‚≠ê</p>
  </div>`
}

/** –ü–æ–∫–∞–∑ –∂–∞–Ω—Ä–∞ –≤–∏–¥–µ–æ */
function showGenres(genresList) {
  let word = '';
  let genres = '';
  if (genresList.length === 0) {
    return "–ñ–∞–Ω—Ä –Ω–µ–∏–∑–≤–µ—Å—Ç–µ–Ω"
  } else if (genresList.length === 1) {
    word = "–ñ–∞–Ω—Ä:"
  }
  else {
    word = "–ñ–∞–Ω—Ä—ã:"
  }
  genresList.forEach((item) => {
    genres += item.name;
    if (genresList[genresList.length - 1] !== item) genres += ', '
  })
  return `${word} ${genres}`
}

function runtime(time) {
  let hour = Math.floor(time / 60);
  let minute = time % 60;
  let hourWord = "—á–∞—Å–æ–≤";
  let minuteWord = "–º–∏–Ω—É—Ç"

  if (!hour && !minute) {
    return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ"
  } else if (!hour) {
    hour = "";
    hourWord = "";
  } else if (!minute) {
    minute = "";
    minuteWord = ""
  }


  if (hour === 1) {
    hourWord = "—á–∞—Å"
  } else if (hour >= 2 && hour <= 4) {
    hourWord = "—á–∞—Å–∞"
  }

  if (minute === 1 || minute === 21 || minute === 31 || minute === 41 || minute === 51) {
    minuteWord = "–º–∏–Ω—É—Ç—É"
  } else if ((minute >= 2 && minute <= 4) || (minute >= 22 && minute <= 24) || (minute >= 32 && minute <= 34) || (minute >= 42 && minute <= 44) ||
    (minute >= 52 && minute <= 54)) {
    minuteWord = "–º–∏–Ω—É—Ç—ã"
  }

  return `${hour} ${hourWord} ${minute} ${minuteWord}`
}

/** –í—ã–≤–æ–¥ –¥–∞—Ç—ã —Ä–µ–ª–∏–∑–∞ –≤ –Ω–æ—Ä–º–∞–ª—å–Ω–æ–º –≤–∏–¥–µ */
function dateRelease(date) {
  if (!date) { return "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞" };
  const year = date.substr(0, 4);
  let monthDate = +date.substr(5, 2) - 1;
  let day = date.substr(8, 2);
  const monthList = ['—è–Ω–≤–∞—Ä—è', '—Ñ–µ–≤—Ä–∞–ª—è', '–º–∞—Ä—Ç–∞', '–∞–ø—Ä–µ–ª—è', '–º–∞—è', '–∏—é–Ω—è', '–∏—é–ª—è', '–∞–≤–≥—É—Å—Ç–∞', '—Å–µ–Ω—Ç—è–±—Ä—è', '–æ–∫—Ç—è–±—Ä—è', '–Ω–æ—è–±—Ä—è', '–¥–µ–∫–∞–±—Ä—è'];

  if (!(+day.substr(0, 1))) day = day.substr(1, 1);
  const month = monthList[monthDate];

  return `${day} ${month} ${year}`
}

/** –í—ã–≤–æ–¥ —Å—Ç–∞—Ç—É—Å–∞ —Ñ–∏–ª—å–º–∞ –Ω–∞ —Ä—É—Å—Å–∫–æ–º —è–∑—ã–∫–µ */
function showRelease(release) {
  let status = {
    'Canceled': '–û—Ç–º–µ–Ω–µ–Ω',
    'Rumored': '–°–ª—É—Ö–∏',
    'Planned': '–ü–ª–∞–Ω–∏—Ä—É–µ–º—ã–π',
    'In Production': '–í –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–µ',
    'Post Production': '–û–∫–æ–Ω—á–∞—Ç–µ–ª—å–Ω—ã–π –º–æ–Ω—Ç–∞–∂',
    'Released': '–í—ã–ø—É—â–µ–Ω',
    'Ended': '–ó–∞–≤–µ—Ä—à–∏–ª—Å—è',
    'Returning Series': '–ü—Ä–æ–¥–æ–ª–∂–∞–µ—Ç—Å—è'
  };
  return status[release] || release;
}

function spacerBudget(budget) {
  let arr = [];
  let strBudget = String(budget)
  let i;
  let len = strBudget.length;

  for (i = 0; i < len; i += 3) {
    arr.push(strBudget.substr(i, 3))
  }

  return arr.join('.')
}

export const content = {
  changeTopContent,
  videoPoster,
  errorContent,
  fullMovieContent,
  fullTvContent,
  fullPersonContent,
  backgroundImage
}